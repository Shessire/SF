@using Microsoft.AspNetCore.Identity
@using SF.ViewModel
@model UserEditViewModel
@* @inject UserManager<ApplicationUser> UserManager *@

<h2>Edit User</h2>

<form asp-action="Edit" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input asp-for="Id" type="hidden" />

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="FirstName"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="LastName"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label>Password</label>
        <a asp-action="ResetPassword" asp-route-id="@Model.Id" class="btn btn-warning mt-2">Reset Password</a>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" readonly />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="CompanyId"></label>
                <select asp-for="CompanyId" class="form-control" asp-items="@(ViewData["Companies"] as SelectList)"></select>
                <span asp-validation-for="CompanyId" class="text-danger"></span>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @foreach (var role in Model.Roles)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="SelectedRoles" value="@role.RoleName" @(role.IsSelected ? "checked" : "") />
                        <label class="form-check-label">@role.RoleName</label>
                    </div>
                }
            </div>
            <span asp-validation-for="Roles" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label for="RoleGroupId">Role Group</label>
        <select name="RoleGroupId" id="RoleGroupId" class="form-control">
            <option value="">Select Role Group</option>
            @if (ViewData["RoleGroups"] is SelectList roleGroups && roleGroups.Any())
            {
                foreach (var group in roleGroups)
                {
                    <option value="@group.Value">@group.Text</option>
                }
            }
            else
            {
                <option value="">No Role Groups Available</option>
            }
        </select>
    </div>


    <div class="form-group">
        <label asp-for="TelephoneNumber"></label>
        <input asp-for="TelephoneNumber" class="form-control" />
        <span asp-validation-for="TelephoneNumber" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FaxNumber"></label>
        <input asp-for="FaxNumber" class="form-control" />
        <span asp-validation-for="FaxNumber" class="text-danger"></span>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="Index" class="btn btn-secondary w-25">Back</a>
        <button type="submit" class="btn btn-primary w-25">Save Changes</button>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
